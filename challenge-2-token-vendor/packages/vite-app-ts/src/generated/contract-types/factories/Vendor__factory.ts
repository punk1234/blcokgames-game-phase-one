/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vendor, VendorInterface } from "../Vendor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfEth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "BuyTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountSold",
        type: "uint256",
      },
    ],
    name: "SellTokenEvent",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yourToken",
    outputs: [
      {
        internalType: "contract YourToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108e63803806108e683398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6107fa806100ec6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610109578063cbdd69b514610127578063d0febe4c1461014a578063f2fde38b1461015257600080fd5b80633ccfd60b146100805780636c11bcd314610097578063715018a6146100b75780637879e84b146100cc575b600080fd5b34801561008c57600080fd5b50610095610172565b005b3480156100a357600080fd5b506100956100b236600461070e565b61023e565b3480156100c357600080fd5b506100956103c7565b3480156100d857600080fd5b506001546100ec906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011557600080fd5b506000546001600160a01b03166100ec565b34801561013357600080fd5b5061013c606481565b604051908152602001610100565b6100956103fd565b34801561015e57600080fd5b5061009561016d3660046106bc565b6105d1565b6000546001600160a01b031633146101a55760405162461bcd60e51b815260040161019c90610740565b60405180910390fd5b6040514790600090339083908381818185875af1925050503d80600081146101e9576040519150601f19603f3d011682016040523d82523d6000602084013e6101ee565b606091505b505090508061023a5760405162461bcd60e51b81526020600482015260186024820152774661696c656420746f2073656e642045746865727321212160401b604482015260640161019c565b5050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561029057600080fd5b505af11580156102a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c891906106ec565b5060006102d6606483610775565b604051909150600090339083908381818185875af1925050503d806000811461031b576040519150601f19603f3d011682016040523d82523d6000602084013e610320565b606091505b505090508061036c5760405162461bcd60e51b81526020600482015260186024820152774661696c656420746f2073656e642045746865727321212160401b604482015260640161019c565b7f3602fc6173ab2c3c94e243b12a7ce06c10d2f7c41b70a8f04a35ae766b0a847b336103a0670de0b6b3a764000086610775565b604080516001600160a01b03909316835260208301919091520160405180910390a1505050565b6000546001600160a01b031633146103f15760405162461bcd60e51b815260040161019c90610740565b6103fb600061066c565b565b600061040a606434610797565b6001546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b15801561045357600080fd5b505afa158015610467573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048b9190610727565b9050808211156104eb5760405162461bcd60e51b815260206004820152602560248201527f56656e646f7220646f6573206e6f74206861766520656e6f75676820746f6b656044820152646e7321212160d81b606482015260840161019c565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561053757600080fd5b505af115801561054b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056f91906106ec565b507f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec77336105a4670de0b6b3a764000034610775565b604080516001600160a01b0390931683526020830191909152810184905260600160405180910390a15050565b6000546001600160a01b031633146105fb5760405162461bcd60e51b815260040161019c90610740565b6001600160a01b0381166106605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161019c565b6106698161066c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156106ce57600080fd5b81356001600160a01b03811681146106e557600080fd5b9392505050565b6000602082840312156106fe57600080fd5b815180151581146106e557600080fd5b60006020828403121561072057600080fd5b5035919050565b60006020828403121561073957600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008261079257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156107bf57634e487b7160e01b600052601160045260246000fd5b50029056fea2646970667358221220fc32e5620052202068cadcb5da042cd009c3b497393d363481bbd1823e19df9264736f6c63430008060033";

export class Vendor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vendor> {
    return super.deploy(tokenAddress, overrides || {}) as Promise<Vendor>;
  }
  getDeployTransaction(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  attach(address: string): Vendor {
    return super.attach(address) as Vendor;
  }
  connect(signer: Signer): Vendor__factory {
    return super.connect(signer) as Vendor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VendorInterface {
    return new utils.Interface(_abi) as VendorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vendor {
    return new Contract(address, _abi, signerOrProvider) as Vendor;
  }
}
